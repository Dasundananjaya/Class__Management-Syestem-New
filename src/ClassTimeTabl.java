
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class ClassTimeTabl extends javax.swing.JFrame {

    /**
     * Creates new form ClassTimeTabl
     */
    public ClassTimeTabl() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        classtimetable = new javax.swing.JLabel();
        subject = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        TeachersName = new javax.swing.JLabel();
        ClassRoomNumber = new javax.swing.JLabel();
        ADD = new javax.swing.JButton();
        View = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TimeTable = new javax.swing.JTable();
        Subject = new javax.swing.JTextField();
        T1 = new javax.swing.JTextField();
        TN = new javax.swing.JTextField();
        CN = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(0, 204, 204));

        classtimetable.setText("Class Time Table.");

        subject.setText("Subject:");

        Time.setText("Time:");

        TeachersName.setText("Teachers Name:");

        ClassRoomNumber.setText("Class Room NO:");

        ADD.setText("ADD");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        View.setText("View");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        TimeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Subject", "Time", "Teacher's Name", "Class Room NO"
            }
        ));
        jScrollPane3.setViewportView(TimeTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(ADD)
                                .addGap(18, 18, 18)
                                .addComponent(View)
                                .addGap(18, 18, 18)
                                .addComponent(Delete)
                                .addGap(28, 28, 28)
                                .addComponent(Update))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(85, 85, 85)
                                        .addComponent(classtimetable))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(ClassRoomNumber)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(CN))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(TeachersName)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(TN, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(subject)
                                                .addComponent(Time))
                                            .addGap(37, 37, 37)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(T1, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                                .addComponent(Subject)))))))
                        .addGap(0, 17, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(classtimetable)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject)
                    .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Time)
                    .addComponent(T1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TeachersName)
                    .addComponent(TN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClassRoomNumber)
                    .addComponent(CN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ADD)
                    .addComponent(View)
                    .addComponent(Delete)
                    .addComponent(Update))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        // TODO add your handling code here:
        try {
    Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_management", "root", "");

    String Query = "INSERT INTO `Class Time Table` (Subject, Time, `Teacher's Name`, `Classroom Number`) VALUES (?, ?, ?, ?)";
    PreparedStatement pst = con.prepareStatement(Query);
    pst.setString(1, Subject.getText());
    pst.setString(2, Time.getText());
    pst.setString(3, TN.getText());
    pst.setString(4, CN.getText());

    pst.executeUpdate();

    JOptionPane.showMessageDialog(null, "Insert successful");
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, e);
}

    }//GEN-LAST:event_ADDActionPerformed

    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
        // TODO add your handling code here:
        
           try {
    Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_management", "root", "");

        
       
        
        // Query to fetch data from the Class Time Table
        String query = "SELECT `Subject`, `Time`, `Teacher's Name`, `Classroom Number` FROM `Class Time Table`";
        PreparedStatement pst = con.prepareStatement(query);
        
        // Execute the query and get the result set
        ResultSet rs = pst.executeQuery();
        
        // Get the JTable model
        DefaultTableModel model = (DefaultTableModel) TimeTable.getModel();
        model.setRowCount(0); // Clear any existing rows
        
        // Iterate over the result set and add rows to the model
        while (rs.next()) {
            Object[] row = {
                rs.getString("Subject"), 
                rs.getString("Time"), 
                rs.getString("Teacher's Name"), 
                rs.getString("Classroom Number")
            };
            model.addRow(row);
        }
        
        // Close resources
        rs.close();
        pst.close();
        con.close();
        
    } catch (Exception e) {
        // Display any errors
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
      
    }//GEN-LAST:event_ViewActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int row = TimeTable.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(null, "Please select a row to delete");
        return;
    }
    
    String subject = (String) TimeTable.getValueAt(row, 0);
    
    int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this entry?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_management", "root", "");
            // SQL query to delete the selected row based on the subject
            String query = "DELETE FROM `Class Time Table` WHERE `Subject` = ?";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, subject);

            int affectedRows = pst.executeUpdate();
            if (affectedRows > 0) {
                // Remove the row from the JTable model
                DefaultTableModel model = (DefaultTableModel) TimeTable.getModel();
                model.removeRow(row);
                JOptionPane.showMessageDialog(null, "Delete successful");
            } else {
                JOptionPane.showMessageDialog(null, "No such record found");
            }

            // Close resources
            pst.close();
            con.close();

        } catch (Exception e) {
            // Display any errors
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
        
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        int row = TimeTable.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(null, "Please select a row to update");
        return;
    }

    String oldSubject = (String) TimeTable.getValueAt(row, 0);

    try {
    Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_management", "root", "");

        String query = "UPDATE `Class Time Table` SET `Subject` = ?, `Time` = ?, `Teacher's Name` = ?, `Classroom Number` = ? WHERE `Subject` = ?";
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1, Subject.getText());
        pst.setString(2, T1.getText());
        pst.setString(3, TN.getText());
        pst.setString(4, CN.getText());
        pst.setString(5, oldSubject);

        int affectedRows = pst.executeUpdate();
        if (affectedRows > 0) {
            // Update the row in the JTable model
            DefaultTableModel model = (DefaultTableModel) TimeTable.getModel();
            model.setValueAt(Subject.getText(), row, 0);
            model.setValueAt(T1.getText(), row, 1);
            model.setValueAt(TN.getText(), row, 2);
            model.setValueAt(CN.getText(), row, 3);
            JOptionPane.showMessageDialog(null, "Update successful");
        } else {
            JOptionPane.showMessageDialog(null, "Update failed");
        }

        // Close resources
        pst.close();
        con.close();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
    }//GEN-LAST:event_UpdateActionPerformed

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    // TODO add your handling code here:
    try {
        Class.forName("com.mysql.cj.jdbc.Driver"); // Use the latest driver class
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/class_management", "root", "");
        
        // Enclose table and column names with spaces in backticks
        String query = "INSERT INTO `Class Time Table` (`Subject`, `Time`, `Teacher's Name`, `Classroom Number`) VALUES (?, ?, ?, ?)";
        PreparedStatement pst = con.prepareStatement(query);
        
        // Assuming the fields are named subject, time, teacherName, and classroomNo respectively
        pst.setString(1, subject.getText());
        pst.setString(2, Time.getText());
        pst.setString(3, TN.getText());
        pst.setString(4, CN.getText());
        
        pst.executeUpdate();
        
        JOptionPane.showMessageDialog(null, "Insert successful");
        
        // Close the PreparedStatement and Connection
        pst.close();
        con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }                                      
}
             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClassTimeTabl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClassTimeTabl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClassTimeTabl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClassTimeTabl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClassTimeTabl().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JTextField CN;
    private javax.swing.JLabel ClassRoomNumber;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField Subject;
    private javax.swing.JTextField T1;
    private javax.swing.JTextField TN;
    private javax.swing.JLabel TeachersName;
    private javax.swing.JLabel Time;
    private javax.swing.JTable TimeTable;
    private javax.swing.JButton Update;
    private javax.swing.JButton View;
    private javax.swing.JLabel classtimetable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel subject;
    // End of variables declaration//GEN-END:variables
}
